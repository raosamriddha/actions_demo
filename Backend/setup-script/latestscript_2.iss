; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "KF Comm 2"
#define MyAppVersion "02.01.004"
#define MyAppPublisher "Repligen"
#define MyAppURL "http://www.repligen.com/"
#define MyAppExeName "KF Comm 2.0.exe"
#define RegPath "SOFTWARE\JavaSoft\Prefs"
#define RegKey "kfcomm2"
#define RegValue "1DIY6YSK9YGDZHC2ZDT027B9QUXL0OGO"
#define VersionRegKey="kfcomm2Version"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{AA403830-F7FA-4CC1-9701-544647DFA234}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName=C:\Repligen\KF Comm 2
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
LicenseFile=C:\D_drive\build\spec.txt
OutputDir=C:\D_drive\build\NewSetupModule
OutputBaseFilename=KF Comm 2
SetupIconFile=C:\D_drive\setup_with_chrome\bin\rep.ico
Compression=lzma
SolidCompression=yes
PrivilegesRequired=admin

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"


[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}";

[InstallDelete]
Type: files; Name: {app}\bin\jre\UserManual\KFComm2\*.pdf
Type: files; Name: {app}\bin\jre\UserManual\KFComm2\*.xlsm

[Files]
Source: "C:\D_drive\setup_with_chrome\bin\jre\iKFComm2Backup.bat"; DestDir: "{app}/bin/jre"; Flags: ignoreversion
Source: "C:\D_drive\setup_with_chrome\bin\jre\uKFComm2Backup.bat"; DestDir: "{app}/bin/jre"; Flags: ignoreversion
Source: "C:\D_drive\setup_with_chrome\KF Comm 2.0.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\D_drive\setup_with_chrome\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Dirs]
Name: "{app}\bin\jre"; Attribs: hidden;

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:ProgramOnTheWeb,{#MyAppName}}"; Filename: "{#MyAppURL}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Registry]
Root: HKCU; Subkey: "{#RegPath}"; ValueType: string; ValueName: "{#RegKey}"; ValueData: "{#RegValue}" ; Flags: createvalueifdoesntexist ; Permissions: users-modify
Root: HKLM32; Subkey: "{#RegPath}"; ValueType: string; ValueName: "{#RegKey}"; ValueData: "{#RegValue}" ; Flags: createvalueifdoesntexist ; Permissions: users-modify
Root: HKLM64; Subkey: "{#RegPath}"; ValueType: string; ValueName: "{#RegKey}"; ValueData: "{#RegValue}" ; Flags: createvalueifdoesntexist ; Check: IsWin64 ; Permissions: users-modify
Root: HKCU; Subkey: "{#RegPath}"; ValueType: string; ValueName: "{#VersionRegKey}"; ValueData: "{#MyAppVersion}" ; Permissions: users-modify

[Run]
Filename: "{app}\bin\jre\iKFComm2Backup.bat"; Flags: runhidden skipifdoesntexist; StatusMsg: "Backing up database..."
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[UninstallRun]
Filename: "{app}\bin\jre\uKFComm2Backup.bat"; Flags: runhidden skipifdoesntexist; StatusMsg: "Backing up database..."

[CustomMessages]
NewerVersionExists=A newer version of {#MyAppName} is already installed.%n%nInstaller version: {#MyAppVersion}%nInstalled version:

[code]
function killProcess(): Boolean;
var 
ResultCode: Integer;
begin
    // Kills frontend
    if Exec(ExpandConstant('taskkill.exe'), '/f /im ' + '"' + 'chrome.exe' + '"', '', SW_HIDE,
       ewWaitUntilTerminated, ResultCode) then
    begin
      // handle success if necessary; ResultCode contains the exit code
    end
    else begin
      // handle failure if necessary; ResultCode contains the error code
    end;

    // Kills backend
    if Exec(ExpandConstant('taskkill.exe'), '/f /im ' + '"' + 'javaw.exe' + '"', '', SW_HIDE,
       ewWaitUntilTerminated, ResultCode) then
    begin
      // handle success if necessary; ResultCode contains the exit code
    end
    else begin
      // handle failure if necessary; ResultCode contains the error code
    end;

    // Proceed Setup
    Result := True;
end;

function InitializeSetup():boolean;
  var Version: String;

  begin
    if RegValueExists(HKEY_CURRENT_USER,'{#RegPath}', '{#VersionRegKey}') then
      begin
        RegQueryStringValue(HKEY_CURRENT_USER,'{#RegPath}', '{#VersionRegKey}', Version);
        if Version > '{#MyAppVersion}' then
          begin
            MsgBox(ExpandConstant('{cm:NewerVersionExists} '+Version), mbInformation, MB_OK);
            Result := False;
          end
        else
          begin
            killProcess();
            Result := True;
          end
      end
    else
      begin
        killProcess();
        Result := True;
      end
  end;
